{"ast":null,"code":"var _jsxFileName = \"E:\\\\ass_react\\\\react\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\"; // import dataFake from \"./dataFake\";\n\nimport Routers from \"./routers\";\nimport apiRequest from \"./api/productApi\"; // import apiRequest from \"./api/categoryApi\";\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n  const [status, setStatus] = useState(false);\n  const [color, setColor] = useState(\"green\");\n\n  const onHandleClick = () => {\n    // setStatus(true);\n    setColor(\"red\");\n  }; // Danh sách sản phẩm\n\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log(\"failed to request API: \", error);\n      }\n    };\n\n    getProducts();\n  }, []); // Xóa sản phẩm\n\n  const onHandleRemove = async id => {\n    try {\n      const {\n        data\n      } = await apiRequest.remove(id);\n      const newProducts = products.filter(product => product.id !== id);\n      setProducts(newProducts);\n      alert(\"Bạn xóa thành công\");\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; // Thêm sản phẩm\n\n\n  const onHanleAdd = async product => {\n    try {\n      const {\n        data\n      } = await apiRequest.create(product);\n      setProducts([...products, data]);\n      alert(\"Bạn thêm thành công\");\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n\n  const onHandSearch = product => {\n    const newProduct = products.filter(product => product.name.toLowerCase().indexOf(product.toLowerCase()) !== -1);\n    setProducts(newProduct);\n  }; //update\n\n\n  const onHandleUpdate = async (id, product) => {\n    try {\n      const {\n        data\n      } = await apiRequest.update(id, product);\n      const newProducts = products.map(pro => pro.id === id ? product : pro);\n      setProducts(newProducts);\n      alert(\"Update thành công\");\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; //----------------------------category--------------------------\n\n\n  const [category, setCategory] = useState([]);\n  useEffect(() => {\n    const getCategory = async () => {\n      try {\n        const {\n          data\n        } = await apiRequest.getAllCate();\n        setCategory(data);\n      } catch (error) {\n        console.log(\"failed to request API: \", error);\n      }\n    };\n\n    getCategory();\n  }, []); //add\n\n  const onHandleAddCate = async cate => {\n    try {\n      const {\n        data\n      } = await apiRequest.createCate(cate);\n      setCategory([...cate, data]);\n      console.log(\"Bạn thêm thành công\");\n    } catch (error) {\n      console.log(\"faild to request Api\", error);\n    }\n  }; //delete\n\n\n  const removeCate = async id => {\n    try {\n      const {\n        data\n      } = await apiRequest.removeCate(id);\n      const newCate = category.filter(cate => cate.id !== id);\n      setCategory(newCate);\n      alert(\"Bạn xóa thành công\");\n    } catch (error) {\n      console.log(\"faild to api\", error);\n    }\n  }; //update\n\n\n  const onHandUpdateCate = async (id, cate) => {\n    try {} catch (error) {}\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Routers, {\n    products: products,\n    onRemove: onHandleRemove,\n    onAdd: onHanleAdd,\n    onUpdate: onHandleUpdate,\n    onSearch: onHandSearch,\n    category: category,\n    onAddCate: onHandleAddCate,\n    onRemoveCate: removeCate,\n    onAddCate: onHandUpdateCate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["E:/ass_react/react/src/App.js"],"names":["React","useState","useEffect","Routers","apiRequest","App","products","setProducts","status","setStatus","color","setColor","onHandleClick","getProducts","data","getAll","error","console","log","onHandleRemove","id","remove","newProducts","filter","product","alert","onHanleAdd","create","onHandSearch","newProduct","name","toLowerCase","indexOf","onHandleUpdate","update","map","pro","category","setCategory","getCategory","getAllCate","onHandleAddCate","cate","createCate","removeCate","newCate","onHandUpdateCate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import dataFake from \"./dataFake\";\nimport Routers from \"./routers\";\nimport apiRequest from \"./api/productApi\";\n// import apiRequest from \"./api/categoryApi\";\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nfunction App() {\n    const [products, setProducts] = useState([]);\n    const [status, setStatus] = useState(false);\n    const [color, setColor] = useState(\"green\");\n    const onHandleClick = () => {\n        // setStatus(true);\n        setColor(\"red\");\n    };\n    // Danh sách sản phẩm\n    useEffect(() => {\n        const getProducts = async () => {\n            try {\n                const { data } = await apiRequest.getAll();\n                setProducts(data);\n            } catch (error) {\n                console.log(\"failed to request API: \", error);\n            }\n        };\n        getProducts();\n    }, []);\n    // Xóa sản phẩm\n    const onHandleRemove = async (id) => {\n        try {\n            const { data } = await apiRequest.remove(id);\n            const newProducts = products.filter((product) => product.id !== id);\n            setProducts(newProducts);\n            alert(\"Bạn xóa thành công\")\n        } catch (error) {\n            console.log(\"failed to request API: \", error);\n        }\n    };\n    // Thêm sản phẩm\n    const onHanleAdd = async (product) => {\n        try {\n            const { data } = await apiRequest.create(product);\n            setProducts([...products, data]);\n            alert(\"Bạn thêm thành công\")\n        } catch (error) {\n            console.log(\"failed to request API: \", error);\n        }\n    };\n    const onHandSearch = (product) => {\n        const newProduct = products.filter((product) => product.name.toLowerCase().indexOf(product.toLowerCase()) !== -1);\n        setProducts(newProduct);\n    };\n    //update\n    const onHandleUpdate = async (id, product) => {\n        try {\n            const { data } = await apiRequest.update(id, product);\n            const newProducts = products.map((pro) => (pro.id === id ? product : pro));\n            setProducts(newProducts);\n            alert(\"Update thành công\")\n        } catch (error) {\n            console.log(\"failed to request API: \", error);\n        }\n\n    };\n\n    //----------------------------category--------------------------\n    const [category, setCategory] = useState([]);\n    useEffect(() => {\n        const getCategory = async () => {\n            try {\n                const { data } = await apiRequest.getAllCate();\n                setCategory(data);\n            } catch (error) {\n                console.log(\"failed to request API: \", error);\n            }\n        };\n        getCategory();\n    }, []);\n    //add\n    const onHandleAddCate = async (cate) =>{\n        try{\n            const { data }= await apiRequest.createCate(cate)\n            setCategory([...cate,data]);\n            console.log(\"Bạn thêm thành công\");\n        } catch(error){\n            console.log(\"faild to request Api\",error);\n        }\n    };\n    //delete\n    const removeCate = async (id)=>{\n        try{\n            const {data}=await apiRequest.removeCate(id);\n            const newCate = category.filter((cate)=>cate.id !==id);\n            setCategory(newCate);\n            alert(\"Bạn xóa thành công\");\n        } catch(error){\n            console.log(\"faild to api\" ,error);\n        }\n    }\n\n    //update\n    const onHandUpdateCate = async (id,cate) =>{\n        try{\n            \n        } catch(error){\n\n        }\n    }\n    return (\n        <div className=\"App\">\n            <Routers products={products}\n                onRemove={onHandleRemove}\n                onAdd={onHanleAdd}\n                onUpdate={onHandleUpdate}\n                onSearch={onHandSearch}\n                category={category}\n                onAddCate={onHandleAddCate}\n                onRemoveCate={removeCate}\n                onAddCate={onHandUpdateCate}\n            />\n        </div>\n    );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}